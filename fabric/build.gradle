plugins {
	id "fabric-loom"
	id "maven-publish"
}

base {
	archivesName = "fancy-fisher-fabric"
}

def releaseVersion = "${project.version}-mc${minecraft_version}"

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"

	include project(":common")
	implementation project(":common")
}

loom {
	splitEnvironmentSourceSets()

	mods {
		register(mod_id) {
			sourceSet sourceSets.main
			sourceSet project(":common").sourceSets.main
		}
	}
}

tasks.processResources {
	inputs.property "version", project.version
	filesMatching("fabric.mod.json") {
		expand(
				"modId": mod_id,
				"modName": mod_name,
				"version": project.version,
				"loader_version": loader_version,
				"minecraft_version": minecraft_version
		)
	}
}

tasks.named("jar") {
	from(project(":common").sourceSets.main.output)
	archiveBaseName.set(base.archivesName)
	archiveVersion.set(releaseVersion)
}

tasks.named("sourcesJar") {
	archiveBaseName.set(base.archivesName)
	archiveVersion.set(releaseVersion)
}

tasks.named("remapJar") {
	archiveFileName.set("${base.archivesName.get()}-${releaseVersion}.jar")
}

tasks.named("remapSourcesJar") {
	archiveFileName.set("${base.archivesName.get()}-${releaseVersion}-sources.jar")
}
